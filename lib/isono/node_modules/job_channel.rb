# -*- coding: utf-8 -*-

module Isono
  module NodeModules
    class JobChannel < Base
    
    def submit(endpoint, command, *args, &blk)
      cur_job_ctx = Thread.current[JobWorker::JOB_CTX_KEY]
      req = rpc.request("job.#{endpoint}", command, *args) { |req|
        req.request[:job_request_type]=:submit
        
        if cur_job_ctx
          req.request[:parent_job_id] = cur_job_ctx.job_id
        end

        blk ? blk.call(req) : req.synchronize
      }

      blk ? req : req.wait
    end
    
    def cancel()
    end
    
    def register_endpoint(endpoint, app)
      rpc.register_endpoint("job.#{endpoint}", Rack::Job.new(app, JobWorker.new(node)))
    end


    private
    def rpc
      @rpc ||= RpcChannel.new(@node)
    end
    
  end
end
end
